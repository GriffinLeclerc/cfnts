# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g. crates.io) dependencies
#
# If you believe there's an error in this file please file an
# issue against the rust-lang/cargo repository. If you're
# editing this file be aware that the upstream Cargo.toml
# will likely look very different (and much more reasonable)

[package]
edition = "2018"
name = "zeroize"
version = "0.5.2"
authors = ["Tony Arcieri <tony@iqlusion.io>"]
description = "              Securely clear secrets from memory with a simple trait built on\n              stable Rust primitives which guarantee they will be zeroed out\n              using an operation will not be 'optimized away' by the compiler.\n              Uses a portable implementation that leverages LLVM's volatile\n              write semantics and memory fences. No weird tricks, no FFI/ASM,\n              no insecure fallbacks, no dependencies, no std, just a trait\n              implemented for all of Rust's core scalar types and\n              slices/iterators thereof for securely zeroing memory.\n              "
homepage = "https://github.com/iqlusioninc/crates/"
readme = "README.md"
keywords = ["memory", "memset", "secure", "volatile", "zero"]
categories = ["cryptography", "memory-management", "no-std", "os"]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/iqlusioninc/crates/tree/master/zeroize"

[features]
alloc = []
default = ["std"]
nightly = []
std = ["alloc"]
[badges.travis-ci]
repository = "iqlusioninc/crates"
